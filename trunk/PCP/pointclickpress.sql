SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

CREATE TABLE IF NOT EXISTS `actiondefs` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `label` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `class` varchar(255) NOT NULL,
  `events` text NOT NULL,
  `types` text NOT NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `class` (`class`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=25 ;

INSERT INTO `actiondefs` (`id`, `label`, `description`, `class`, `events`, `types`) VALUES
(1, 'Assign value', 'Assign a new value to a session variable. Example: $door_open = 1;', 'action_assign', 'ASSIGN', ',story,location,scene,grid,itemdef,itemstate,griditem'),
(2, 'Assign value and scene refresh', 'Assign a new value to a session variable then refresh the scene. Example: $door_open = 1;', 'action_assignrefresh', 'ASSIGN', 'grid,griditem'),
(3, 'Assign value and item refresh', 'Assign a new value to a session variable then refresh any items. Example: $door_open = 1;', 'action_assignrefreshitems', 'ASSIGN', 'grid,griditem'),
(4, 'Eval', 'Execute arbitrary PHP code. Use with caution.', 'action_eval', '', ',story,location,scene,grid,itemdef,itemstate,griditem'),
(5, 'Eval w/ Scene Refresh', 'Execute arbitrary PHP code then refreshes the scene. Use with caution.', 'action_evalrefresh', '', 'grid,griditem'),
(6, 'Eval w/ Item Refresh', 'Execute arbitrary PHP code then refreshes items in scene. Use with caution.', 'action_evalrefreshitems', '', 'grid,griditem'),
(7, 'Event Timer', 'Execute a timed click on a cell. Can be used to execute timed events. usage: wait_time,cell_to_click', 'action_eventtimer', '', ',story,location,scene,grid,itemdef,itemstate,griditem'),
(8, 'If', 'Example: if(array(array($var,$operator,$var2,$cell_id_to_click),array($var,"<",$var2,901)))', 'action_if', '', ',story,location,scene,grid,itemdef,itemstate,griditem'),
(9, 'Link', 'Create a link to another scene location', 'action_link', '', 'grid,griditem'),
(10, 'User Message', 'Displays a Message to the User', 'action_message', '', ',story,location,scene,grid,itemstate'),
(11, 'Scene Refresh', 'Refreshes the scene', 'action_refresh', '', 'grid,griditem'),
(12, 'Items Refresh', 'Refreshes Items in the scene', 'action_refreshitems', '', 'grid,griditem'),
(13, 'Ternary ''If'' statement', 'Assign a variable using a ternary ''If'' statement $var = (eval_value1 [>|<|<=|>=|==|!=] eval_value1 ) ? true_value1 : false_value 2;', 'action_ternary', '', ',story,location,scene,grid,itemdef,itemstate,griditem'),
(14, 'Ternary ''if'' and scene refresh', 'Assign a variable using a ternary ''If'' statement then refresh the scene $var = (eval_value1 [>|<|<=|>=|==|!=] eval_value1 ) ? true_value1 : false_value 2;', 'action_ternaryrefresh', '', 'grid,griditem'),
(16, 'Use Inventory Item', 'Use item from inventory. "item_id,cell_id_to_trigger"', 'action_inventoryuse', 'INVENTORY_USE_ITEM', 'grid');

CREATE TABLE IF NOT EXISTS `actions` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `action` varchar(255) NOT NULL,
  `action_label` varchar(255) NOT NULL,
  `action_value` text NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=211 ;

INSERT INTO `actions` (`id`, `action`, `action_label`, `action_value`) VALUES
(22, 'action_link', 'link', '21'),
(24, 'action_link', 'link', '22'),
(50, 'action_link', 'Link', '31'),
(51, 'action_assign', 'Assign value', '$direction = ''east'';\n$wellisfull_flag = ''false'';'),
(53, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(54, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south_east'';'),
(55, 'action_link', 'Link', '34'),
(57, 'action_assign', 'Assign value', '$path1 = $direction; '),
(58, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(59, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(60, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(61, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south_east'';'),
(62, 'action_link', 'Link', '33'),
(64, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''detail'';'),
(65, 'action_link', 'Link', '31'),
(66, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(67, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(68, 'action_assign', 'Assign value', '$building1 = $direction'),
(69, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(70, 'action_link', 'Link', '36'),
(71, 'action_link', 'Link', '35'),
(72, 'action_assign', 'Assign value', '$path2 = $direction;'),
(73, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(74, 'action_link', 'Link', '31'),
(75, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_down'';'),
(76, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = '''';'),
(77, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_mid'';'),
(78, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_mid'';'),
(79, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box1_closed''; '),
(80, 'action_link', 'Link', '34'),
(81, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box1_open'';'),
(82, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = '''';'),
(83, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_mid'';'),
(84, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = '''';'),
(85, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_mid'';'),
(86, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box1_closed'';'),
(87, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box1_closed'';'),
(88, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box2_closed'';'),
(89, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = '''';'),
(90, 'action_assign', 'Assign value', '$building2 = ''detail_mid'';'),
(91, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box2_closed'';'),
(92, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_box2_open'';'),
(93, 'action_assignrefresh', 'Assign value and scene refresh', '$building2 = ''detail_mid'';'),
(94, 'action_assign', 'Assign value', '$path3 = $direction;'),
(95, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(96, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(97, 'action_link', 'Link', '34'),
(98, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(99, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(100, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(102, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(103, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(104, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(105, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(106, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(107, 'action_link', 'Link', '34'),
(108, 'action_link', 'Link', '34'),
(109, 'action_assign', 'Assign value', '$direction = ''west'';'),
(110, 'action_assign', 'Assign value', '$direction = ''east'';'),
(111, 'action_link', 'Link', '40'),
(112, 'action_link', 'Link', '37'),
(114, 'action_assign', 'Assign value', '$direction = ''north'';'),
(115, 'action_link', 'Link', '41'),
(116, 'action_link', 'Link', '37'),
(117, 'action_assignrefresh', 'Assign value and scene refresh', '$well = '''';'),
(118, 'action_evalrefresh', 'Eval w/ Scene Refresh', '/* alternate eval action which does the same as the if action */\n/*\nif (Storydata::get(''wellisfull_flag'') == ''true'')\n{ \n  StoryData::set(''well'',"detail_full");\n}\nelse\n{\n  StoryData::set(''well'',"detail");\n}\n*/'),
(119, 'action_link', 'Link', '41'),
(121, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(124, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(125, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(126, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(127, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(128, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(129, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(130, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(135, 'action_link', 'Link', '31'),
(138, 'action_link', 'Link', '31'),
(139, 'action_assign', 'Assign value', '$direction = ''north'';'),
(140, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'''),
(141, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(143, 'action_link', 'Link', '43'),
(144, 'action_assign', 'Assign value', '$river = $direction; '),
(145, 'action_link', 'Link', '36'),
(146, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(147, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(148, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(149, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(150, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(151, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(152, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(153, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(154, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(155, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''detail'';'),
(156, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(157, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''north'';'),
(158, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''south'';'),
(159, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(160, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''west'';'),
(161, 'action_assignrefresh', 'Assign value and scene refresh', '$direction = ''east'';'),
(162, 'action_eval', 'Eval', 'Items::setGriditemValue(''mybucket'',''full'');\n$action_value = ''Your Bucket is now full of water'';\n$actions[] = Actions::createaction(''action_message'',$action_value);\nreturn Actions::doactions($actions);'),
(163, 'action_assignrefresh', 'Assign value and scene refresh', '$well = '''';'),
(190, 'action_inventoryAdd', 'Add To Inventory', ''),
(191, 'action_inventoryAdd', 'Add To Inventory', ''),
(196, 'action_message', 'User Message', 'The water is wet'),
(199, 'action_if', 'If', 'if(array(\n              array($wellisfull_flag,''=='',''true'',900),\n              array($wellisfull_flag,''=='',''false'',901)\n            )\n   );'),
(200, 'action_assignrefresh', 'Assign value and scene refresh', '$well = ''detail_full'';'),
(201, 'action_assignrefresh', 'Assign value and scene refresh', '$well = ''detail'';'),
(202, 'action_if', 'If', 'if(array(array(''$mybucket'',''=='',''full'',900),array(''$mybucket'',''!='',''full'',901)));'),
(203, 'action_assignrefresh', 'Assign value and scene refresh', '$well = "detail_full";\n$wellisfull_flag = "true";'),
(204, 'action_message', 'User Message', 'You fall into the well and break you neck!;'),
(206, 'action_link', 'Link', '42'),
(207, 'action_assign', 'Assign value', '$direction = ''west'';'),
(208, 'action_assign', 'Assign value', '$direction = ''east'';'),
(209, 'action_eval', 'Eval', 'Items::setGriditemValue(''mybucket'',''empty'');');

CREATE TABLE IF NOT EXISTS `cells` (
  `id` int(20) unsigned NOT NULL,
  `scene_id` bigint(20) unsigned NOT NULL,
  `grid_action_id` bigint(20) unsigned NOT NULL,
  KEY `id_storyid` (`id`,`scene_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `cells` (`id`, `scene_id`, `grid_action_id`) VALUES
(90, 23, 16),
(91, 23, 16),
(92, 23, 16),
(93, 23, 16),
(94, 23, 16),
(95, 23, 16),
(96, 23, 16),
(97, 23, 16),
(98, 23, 16),
(99, 23, 16),
(90, 26, 24),
(91, 26, 24),
(92, 26, 24),
(93, 26, 24),
(94, 26, 24),
(95, 26, 24),
(96, 26, 24),
(97, 26, 24),
(98, 26, 24),
(99, 26, 24),
(99, 25, 43),
(98, 25, 43),
(97, 25, 43),
(96, 25, 43),
(95, 25, 43),
(94, 25, 43),
(93, 25, 43),
(92, 25, 43),
(91, 25, 43),
(90, 25, 43),
(0, 25, 43),
(0, 25, 43),
(80, 45, 53),
(70, 45, 53),
(60, 45, 53),
(50, 45, 53),
(40, 45, 53),
(30, 45, 53),
(20, 45, 53),
(91, 48, 59),
(92, 48, 59),
(93, 48, 59),
(94, 48, 59),
(95, 48, 59),
(96, 48, 59),
(97, 48, 59),
(98, 48, 59),
(90, 62, 105),
(91, 62, 105),
(92, 62, 105),
(93, 62, 105),
(94, 62, 105),
(95, 62, 105),
(80, 62, 105),
(81, 62, 105),
(82, 62, 105),
(72, 62, 105),
(71, 62, 105),
(70, 62, 105),
(60, 62, 105),
(61, 62, 105),
(50, 62, 105),
(84, 62, 105),
(83, 62, 105),
(73, 62, 105),
(62, 62, 105),
(51, 62, 105),
(40, 62, 105),
(96, 62, 105),
(97, 62, 105),
(98, 62, 105),
(86, 62, 105),
(85, 62, 105),
(74, 62, 105),
(63, 62, 105),
(41, 68, 112),
(51, 68, 112),
(61, 68, 112),
(62, 68, 112),
(52, 68, 112),
(42, 68, 112),
(43, 68, 112),
(53, 68, 112),
(63, 68, 112),
(34, 66, 113),
(44, 66, 113),
(54, 66, 113),
(64, 66, 113),
(74, 66, 113),
(75, 66, 113),
(65, 66, 113),
(55, 66, 113),
(45, 66, 113),
(35, 66, 113),
(36, 66, 113),
(46, 66, 113),
(56, 66, 113),
(66, 66, 113),
(76, 66, 113),
(73, 66, 113),
(63, 66, 113),
(53, 66, 113),
(43, 66, 113),
(33, 66, 113),
(9, 73, 115),
(19, 73, 115),
(29, 73, 115),
(39, 73, 115),
(49, 73, 115),
(59, 73, 115),
(69, 73, 115),
(79, 73, 115),
(89, 73, 115),
(99, 73, 115),
(0, 73, 116),
(10, 73, 116),
(20, 73, 116),
(30, 73, 116),
(40, 73, 116),
(50, 73, 116),
(60, 73, 116),
(70, 73, 116),
(80, 73, 116),
(90, 73, 116),
(73, 62, 124),
(0, 62, 125),
(73, 62, 126),
(74, 62, 126),
(75, 62, 126),
(83, 62, 126),
(84, 62, 126),
(85, 62, 126),
(93, 62, 126),
(94, 62, 126),
(95, 62, 126),
(73, 62, 127),
(74, 62, 127),
(75, 62, 127),
(83, 62, 127),
(84, 62, 127),
(85, 62, 127),
(93, 62, 127),
(94, 62, 127),
(95, 62, 127),
(23, 42, 0),
(22, 42, 0),
(24, 42, 0),
(25, 42, 0),
(26, 42, 0),
(32, 42, 0),
(33, 42, 0),
(34, 42, 0),
(36, 42, 0),
(42, 42, 0),
(43, 42, 0),
(44, 42, 0),
(45, 42, 0),
(46, 42, 0),
(52, 42, 0),
(53, 42, 0),
(54, 42, 0),
(55, 42, 0),
(56, 42, 0),
(62, 42, 0),
(63, 42, 0),
(64, 42, 0),
(65, 42, 0),
(66, 42, 0),
(72, 42, 0),
(73, 42, 0),
(74, 42, 0),
(75, 42, 0),
(76, 42, 0),
(23, 66, 129),
(24, 66, 129),
(25, 66, 129),
(26, 66, 129),
(27, 66, 129),
(32, 66, 129),
(33, 66, 129),
(34, 66, 129),
(35, 66, 129),
(36, 66, 129),
(37, 66, 129),
(42, 66, 129),
(43, 66, 129),
(44, 66, 129),
(45, 66, 129),
(46, 66, 129),
(47, 66, 129),
(57, 66, 129),
(56, 66, 129),
(55, 66, 129),
(54, 66, 129),
(53, 66, 129),
(52, 66, 129),
(62, 66, 129),
(63, 66, 129),
(64, 66, 129),
(65, 66, 129),
(66, 66, 129),
(67, 66, 129),
(77, 66, 129),
(76, 66, 129),
(75, 66, 129),
(74, 66, 129),
(73, 66, 129),
(72, 66, 129),
(84, 66, 129),
(85, 66, 129),
(86, 66, 129),
(83, 66, 129),
(86, 66, 130),
(85, 66, 130),
(84, 66, 130),
(83, 66, 130),
(77, 66, 130),
(76, 66, 130),
(75, 66, 130),
(74, 66, 130),
(73, 66, 130),
(72, 66, 130),
(67, 66, 130),
(66, 66, 130),
(65, 66, 130),
(64, 66, 130),
(63, 66, 130),
(62, 66, 130),
(57, 66, 130),
(56, 66, 130),
(55, 66, 130),
(54, 66, 130),
(53, 66, 130),
(52, 66, 130),
(47, 66, 130),
(46, 66, 130),
(45, 66, 130),
(44, 66, 130),
(43, 66, 130),
(42, 66, 130),
(37, 66, 130),
(36, 66, 130),
(35, 66, 130),
(34, 66, 130),
(33, 66, 130),
(32, 66, 130),
(27, 66, 130),
(26, 66, 130),
(25, 66, 130),
(24, 66, 130),
(23, 66, 130),
(64, 49, 135),
(74, 49, 135),
(75, 49, 135),
(65, 49, 135),
(3, 83, 157),
(4, 83, 157),
(5, 83, 157),
(6, 83, 157),
(14, 66, 158),
(13, 66, 158),
(15, 66, 158),
(16, 66, 158),
(96, 42, 160),
(9, 42, 161),
(19, 42, 161),
(8, 42, 161),
(18, 42, 161),
(901, 42, 162),
(9001, 42, 163),
(5, 45, 52),
(4, 45, 52),
(3, 45, 52),
(2, 45, 52),
(6, 45, 52),
(12, 45, 52),
(13, 45, 52),
(14, 45, 52),
(15, 45, 52),
(25, 45, 52),
(24, 45, 52),
(23, 45, 52),
(22, 45, 52),
(32, 45, 52),
(33, 45, 52),
(34, 45, 52),
(35, 45, 52),
(45, 45, 52),
(44, 45, 52),
(43, 45, 52),
(42, 45, 52),
(52, 45, 52),
(53, 45, 52),
(54, 45, 52),
(55, 45, 52),
(56, 45, 52),
(36, 45, 52),
(46, 45, 52),
(26, 45, 52),
(16, 45, 52),
(20, 46, 133),
(30, 46, 133),
(40, 46, 133),
(50, 46, 133),
(60, 46, 133),
(70, 46, 133),
(80, 46, 133),
(90, 46, 133),
(47, 46, 58),
(46, 46, 58),
(45, 46, 58),
(37, 46, 58),
(36, 46, 58),
(35, 46, 58),
(27, 46, 58),
(26, 46, 58),
(25, 46, 58),
(17, 46, 58),
(16, 46, 58),
(15, 46, 58),
(48, 46, 58),
(38, 46, 58),
(28, 46, 58),
(18, 46, 58),
(19, 46, 58),
(29, 46, 58),
(49, 46, 58),
(39, 46, 58),
(98, 47, 134),
(97, 47, 134),
(96, 47, 134),
(95, 47, 134),
(94, 47, 134),
(93, 47, 134),
(92, 47, 134),
(99, 47, 134),
(58, 51, 66),
(57, 51, 66),
(56, 51, 66),
(55, 51, 66),
(48, 51, 66),
(47, 51, 66),
(46, 51, 66),
(45, 51, 66),
(38, 51, 66),
(37, 51, 66),
(36, 51, 66),
(35, 51, 66),
(28, 51, 66),
(27, 51, 66),
(26, 51, 66),
(25, 51, 66),
(59, 51, 66),
(49, 51, 66),
(39, 51, 66),
(29, 51, 66),
(17, 51, 66),
(11, 51, 65),
(31, 51, 65),
(21, 51, 65),
(51, 51, 65),
(41, 51, 65),
(61, 51, 65),
(71, 51, 65),
(81, 51, 65),
(100, 61, 131),
(99, 61, 131),
(98, 61, 131),
(90, 61, 131),
(89, 61, 131),
(80, 61, 131),
(70, 61, 131),
(67, 61, 68),
(57, 61, 68),
(48, 61, 68),
(47, 61, 68),
(38, 61, 68),
(37, 61, 68),
(28, 61, 68),
(27, 61, 68),
(18, 61, 68),
(17, 61, 68),
(68, 61, 68),
(58, 61, 68),
(69, 61, 68),
(29, 61, 68),
(49, 61, 68),
(59, 61, 68),
(39, 61, 68),
(19, 61, 68),
(99, 52, 74),
(98, 52, 74),
(97, 52, 74),
(96, 52, 74),
(95, 52, 74),
(94, 52, 74),
(93, 52, 74),
(92, 52, 74),
(91, 52, 74),
(100, 52, 74),
(99, 53, 70),
(98, 53, 70),
(97, 53, 70),
(96, 53, 70),
(95, 53, 70),
(94, 53, 70),
(93, 53, 70),
(92, 53, 70),
(91, 53, 70),
(90, 53, 70),
(89, 53, 70),
(88, 53, 70),
(87, 53, 70),
(86, 53, 70),
(85, 53, 70),
(84, 53, 70),
(83, 53, 70),
(82, 53, 70),
(81, 53, 70),
(100, 53, 70),
(99, 54, 83),
(98, 54, 83),
(97, 54, 83),
(96, 54, 83),
(95, 54, 83),
(94, 54, 83),
(93, 54, 83),
(92, 54, 83),
(91, 54, 83),
(100, 54, 83),
(92, 55, 76),
(91, 55, 76),
(81, 55, 76),
(71, 55, 76),
(61, 55, 76),
(51, 55, 76),
(41, 55, 76),
(31, 55, 76),
(21, 55, 76),
(11, 55, 76),
(1, 55, 76),
(99, 56, 78),
(98, 56, 78),
(97, 56, 78),
(96, 56, 78),
(95, 56, 78),
(94, 56, 78),
(93, 56, 78),
(92, 56, 78),
(91, 56, 78),
(100, 56, 78),
(100, 59, 123),
(90, 59, 123),
(80, 59, 123),
(70, 59, 123),
(60, 59, 123),
(50, 59, 123),
(40, 59, 123),
(30, 59, 123),
(20, 59, 123),
(10, 59, 123),
(99, 59, 88),
(98, 59, 88),
(97, 59, 88),
(96, 59, 88),
(95, 59, 88),
(94, 59, 88),
(93, 59, 88),
(92, 59, 88),
(91, 59, 88),
(89, 59, 88),
(88, 59, 88),
(87, 59, 88),
(86, 59, 88),
(85, 59, 88),
(84, 59, 88),
(83, 59, 88),
(82, 59, 88),
(81, 59, 88),
(100, 59, 88),
(90, 59, 88),
(10, 60, 122),
(20, 60, 122),
(30, 60, 122),
(40, 60, 122),
(50, 60, 122),
(60, 60, 122),
(70, 60, 122),
(80, 60, 122),
(90, 60, 122),
(0, 60, 121),
(81, 60, 121),
(71, 60, 121),
(51, 60, 121),
(61, 60, 121),
(41, 60, 121),
(31, 60, 121),
(21, 60, 121),
(11, 60, 121),
(1, 60, 121),
(67, 60, 90),
(66, 60, 90),
(65, 60, 90),
(57, 60, 90),
(56, 60, 90),
(55, 60, 90),
(47, 60, 90),
(46, 60, 90),
(45, 60, 90),
(37, 60, 90),
(36, 60, 90),
(35, 60, 90),
(25, 60, 90),
(68, 60, 90),
(38, 60, 90),
(58, 60, 90),
(48, 60, 90),
(26, 60, 90),
(27, 60, 90),
(28, 60, 90),
(18, 60, 90),
(17, 60, 90),
(16, 60, 90),
(15, 60, 90),
(99, 60, 89),
(98, 60, 89),
(97, 60, 89),
(96, 60, 89),
(95, 60, 89),
(94, 60, 89),
(93, 60, 89),
(92, 60, 89),
(91, 60, 89),
(100, 60, 89),
(89, 73, 153),
(79, 73, 153),
(69, 73, 153),
(59, 73, 153),
(49, 73, 153),
(39, 73, 153),
(29, 73, 153),
(19, 73, 153),
(20, 73, 153),
(30, 73, 153),
(40, 73, 153),
(50, 73, 153),
(60, 73, 153),
(70, 73, 153),
(80, 73, 153),
(90, 73, 153),
(81, 73, 152),
(71, 73, 152),
(61, 73, 152),
(51, 73, 152),
(41, 73, 152),
(31, 73, 152),
(21, 73, 152),
(11, 73, 152),
(98, 73, 120),
(97, 73, 120),
(96, 73, 120),
(95, 73, 120),
(94, 73, 120),
(93, 73, 120),
(92, 73, 120),
(91, 73, 120),
(98, 74, 136),
(97, 74, 136),
(96, 74, 136),
(95, 74, 136),
(88, 74, 136),
(87, 74, 136),
(86, 74, 136),
(85, 74, 136),
(78, 74, 136),
(77, 74, 136),
(76, 74, 136),
(75, 74, 136),
(68, 74, 136),
(67, 74, 136),
(66, 74, 136),
(65, 74, 136),
(58, 74, 136),
(57, 74, 136),
(56, 74, 136),
(55, 74, 136),
(48, 74, 136),
(47, 74, 136),
(46, 74, 136),
(45, 74, 136),
(38, 74, 136),
(37, 74, 136),
(36, 74, 136),
(35, 74, 136),
(99, 74, 136),
(89, 74, 136),
(79, 74, 136),
(69, 74, 136),
(59, 74, 136),
(49, 74, 136),
(39, 74, 136),
(29, 74, 136),
(28, 74, 136),
(27, 74, 136),
(26, 74, 136),
(25, 74, 136),
(15, 74, 136),
(16, 74, 136),
(17, 74, 136),
(18, 74, 136),
(19, 74, 136),
(90, 74, 119),
(80, 74, 119),
(70, 74, 119),
(60, 74, 119),
(10, 74, 119),
(20, 74, 119),
(30, 74, 119),
(40, 74, 119),
(50, 74, 119),
(1, 74, 118),
(2, 74, 118),
(81, 74, 118),
(71, 74, 118),
(61, 74, 118),
(51, 74, 118),
(41, 74, 118),
(31, 74, 118),
(21, 74, 118),
(11, 74, 118),
(82, 74, 118),
(72, 74, 118),
(62, 74, 118),
(52, 74, 118),
(42, 74, 118),
(32, 74, 118),
(22, 74, 118),
(12, 74, 118),
(94, 74, 117),
(93, 74, 117),
(92, 74, 117),
(91, 74, 117),
(92, 62, 128),
(91, 62, 128),
(82, 62, 128),
(81, 62, 128),
(72, 62, 128),
(71, 62, 128),
(62, 62, 128),
(61, 62, 128),
(51, 62, 128),
(41, 62, 128),
(83, 62, 128),
(93, 62, 128),
(73, 62, 128),
(63, 62, 128),
(52, 62, 128),
(42, 62, 128),
(31, 62, 128),
(21, 62, 128),
(11, 62, 128),
(99, 65, 111),
(98, 65, 111),
(97, 65, 111),
(96, 65, 111),
(95, 65, 111),
(94, 65, 111),
(93, 65, 111),
(92, 65, 111),
(91, 65, 111),
(82, 65, 111),
(81, 65, 111),
(72, 65, 111),
(71, 65, 111),
(61, 65, 111),
(51, 65, 111),
(31, 65, 111),
(41, 65, 111),
(99, 66, 109),
(98, 66, 109),
(97, 66, 109),
(96, 66, 109),
(95, 66, 109),
(94, 66, 109),
(93, 66, 109),
(92, 66, 109),
(91, 66, 109),
(90, 66, 109),
(80, 66, 109),
(70, 66, 109),
(60, 66, 109),
(50, 66, 109),
(40, 66, 109),
(30, 66, 109),
(20, 66, 109),
(10, 66, 109),
(9, 66, 109),
(8, 66, 109),
(7, 66, 109),
(6, 66, 109),
(5, 66, 109),
(4, 66, 109),
(3, 66, 109),
(2, 66, 109),
(1, 66, 109),
(0, 66, 109),
(11, 66, 109),
(21, 66, 109),
(31, 66, 109),
(41, 66, 109),
(51, 66, 109),
(61, 66, 109),
(81, 66, 109),
(71, 66, 109),
(99, 84, 155),
(98, 84, 155),
(97, 84, 155),
(96, 84, 155),
(95, 84, 155),
(94, 84, 155),
(93, 84, 155),
(92, 84, 155),
(91, 84, 155),
(90, 84, 155),
(80, 84, 155),
(70, 84, 155),
(60, 84, 155),
(50, 84, 155),
(40, 84, 155),
(30, 84, 155),
(20, 84, 155),
(10, 84, 155),
(9, 84, 155),
(8, 84, 155),
(7, 84, 155),
(6, 84, 155),
(5, 84, 155),
(4, 84, 155),
(3, 84, 155),
(2, 84, 155),
(1, 84, 155),
(0, 84, 155),
(11, 84, 155),
(21, 84, 155),
(31, 84, 155),
(41, 84, 155),
(51, 84, 155),
(61, 84, 155),
(71, 84, 155),
(81, 84, 155),
(95, 68, 104),
(94, 68, 104),
(93, 68, 104),
(92, 68, 104),
(91, 68, 104),
(84, 68, 104),
(83, 68, 104),
(82, 68, 104),
(81, 68, 104),
(73, 68, 104),
(72, 68, 104),
(71, 68, 104),
(62, 68, 104),
(61, 68, 104),
(51, 68, 104),
(52, 68, 104),
(41, 68, 104),
(31, 68, 104),
(42, 68, 104),
(63, 68, 104),
(74, 68, 104),
(85, 68, 104),
(96, 68, 104),
(53, 68, 104),
(64, 68, 104),
(75, 68, 104),
(86, 68, 104),
(97, 68, 104),
(36, 68, 103),
(35, 68, 103),
(34, 68, 103),
(26, 68, 103),
(25, 68, 103),
(24, 68, 103),
(16, 68, 103),
(15, 68, 103),
(14, 68, 103),
(37, 68, 103),
(27, 68, 103),
(17, 68, 103),
(18, 68, 103),
(28, 68, 103),
(38, 68, 103),
(77, 78, 147),
(76, 78, 147),
(75, 78, 147),
(74, 78, 147),
(73, 78, 147),
(72, 78, 147),
(67, 78, 147),
(66, 78, 147),
(65, 78, 147),
(64, 78, 147),
(63, 78, 147),
(62, 78, 147),
(78, 78, 147),
(68, 78, 147),
(69, 78, 147),
(79, 78, 147),
(90, 78, 146),
(80, 78, 146),
(70, 78, 146),
(60, 78, 146),
(50, 78, 146),
(40, 78, 146),
(30, 78, 146),
(20, 78, 146),
(81, 78, 145),
(71, 78, 145),
(61, 78, 145),
(51, 78, 145),
(41, 78, 145),
(31, 78, 145),
(21, 78, 145),
(11, 78, 145),
(10, 78, 145),
(98, 78, 144),
(97, 78, 144),
(96, 78, 144),
(95, 78, 144),
(94, 78, 144),
(93, 78, 144),
(92, 78, 144),
(99, 78, 144),
(81, 80, 143),
(71, 80, 143),
(61, 80, 143),
(51, 80, 143),
(41, 80, 143),
(31, 80, 143),
(21, 80, 143),
(11, 80, 143),
(90, 80, 142),
(80, 80, 142),
(70, 80, 142),
(60, 80, 142),
(50, 80, 142),
(40, 80, 142),
(30, 80, 142),
(20, 80, 142),
(98, 80, 141),
(97, 80, 141),
(96, 80, 141),
(95, 80, 141),
(94, 80, 141),
(93, 80, 141),
(92, 80, 141),
(91, 80, 141),
(99, 80, 141),
(100, 80, 141),
(81, 81, 140),
(71, 81, 140),
(61, 81, 140),
(51, 81, 140),
(41, 81, 140),
(31, 81, 140),
(21, 81, 140),
(11, 81, 140),
(90, 81, 139),
(80, 81, 139),
(70, 81, 139),
(60, 81, 139),
(50, 81, 139),
(40, 81, 139),
(30, 81, 139),
(20, 81, 139),
(98, 81, 138),
(97, 81, 138),
(96, 81, 138),
(95, 81, 138),
(94, 81, 138),
(93, 81, 138),
(92, 81, 138),
(91, 81, 138),
(88, 81, 138),
(87, 81, 138),
(86, 81, 138),
(85, 81, 138),
(84, 81, 138),
(83, 81, 138),
(82, 81, 138),
(81, 81, 138),
(99, 81, 138),
(89, 81, 138),
(90, 81, 138),
(100, 81, 138),
(46, 81, 137),
(45, 81, 137),
(44, 81, 137),
(43, 81, 137),
(36, 81, 137),
(35, 81, 137),
(34, 81, 137),
(33, 81, 137),
(32, 81, 137),
(26, 81, 137),
(25, 81, 137),
(24, 81, 137),
(23, 81, 137),
(22, 81, 137),
(16, 81, 137),
(15, 81, 137),
(14, 81, 137),
(13, 81, 137),
(12, 81, 137),
(6, 81, 137),
(5, 81, 137),
(4, 81, 137),
(3, 81, 137),
(2, 81, 137),
(47, 81, 137),
(37, 81, 137),
(27, 81, 137),
(8, 81, 137),
(18, 81, 137),
(28, 81, 137),
(38, 81, 137),
(48, 81, 137),
(49, 81, 137),
(39, 81, 137),
(29, 81, 137),
(19, 81, 137),
(7, 81, 137),
(9, 81, 137),
(68, 83, 165),
(67, 83, 165),
(66, 83, 165),
(65, 83, 165),
(64, 83, 165),
(63, 83, 165),
(62, 83, 165),
(58, 83, 165),
(57, 83, 165),
(56, 83, 165),
(55, 83, 165),
(54, 83, 165),
(53, 83, 165),
(52, 83, 165),
(48, 83, 165),
(47, 83, 165),
(46, 83, 165),
(45, 83, 165),
(44, 83, 165),
(43, 83, 165),
(42, 83, 165),
(38, 83, 165),
(37, 83, 165),
(36, 83, 165),
(35, 83, 165),
(34, 83, 165),
(33, 83, 165),
(32, 83, 165),
(28, 83, 165),
(27, 83, 165),
(26, 83, 165),
(25, 83, 165),
(24, 83, 165),
(23, 83, 165),
(22, 83, 165),
(69, 83, 165),
(59, 83, 165),
(49, 83, 165),
(39, 83, 165),
(29, 83, 165),
(98, 83, 151),
(97, 83, 151),
(96, 83, 151),
(95, 83, 151),
(94, 83, 151),
(93, 83, 151),
(92, 83, 151),
(91, 83, 151),
(88, 83, 151),
(87, 83, 151),
(86, 83, 151),
(85, 83, 151),
(84, 83, 151),
(83, 83, 151),
(82, 83, 151),
(81, 83, 151),
(99, 83, 151),
(89, 83, 151),
(90, 83, 151),
(100, 83, 151),
(71, 83, 166),
(61, 83, 166),
(51, 83, 166),
(41, 83, 166),
(31, 83, 166),
(11, 83, 166),
(21, 83, 166),
(20, 83, 167),
(30, 83, 167),
(40, 83, 167),
(50, 83, 167),
(60, 83, 167),
(70, 83, 167),
(80, 83, 167),
(81, 82, 150),
(71, 82, 150),
(61, 82, 150),
(51, 82, 150),
(41, 82, 150),
(31, 82, 150),
(21, 82, 150),
(11, 82, 150),
(90, 82, 149),
(80, 82, 149),
(70, 82, 149),
(60, 82, 149),
(40, 82, 149),
(50, 82, 149),
(30, 82, 149),
(20, 82, 149),
(98, 82, 148),
(97, 82, 148),
(96, 82, 148),
(95, 82, 148),
(94, 82, 148),
(93, 82, 148),
(92, 82, 148),
(91, 82, 148),
(99, 82, 148),
(100, 82, 148),
(100, 44, 98),
(90, 44, 98),
(80, 44, 98),
(70, 44, 98),
(60, 44, 98),
(50, 44, 98),
(40, 44, 98),
(30, 44, 98),
(20, 44, 98),
(10, 44, 98),
(100, 44, 92),
(99, 44, 92),
(98, 44, 92),
(97, 44, 92),
(96, 44, 92),
(95, 44, 92),
(94, 44, 92),
(93, 44, 92),
(92, 44, 92),
(91, 44, 92),
(91, 44, 91),
(81, 44, 91),
(71, 44, 91),
(61, 44, 91),
(51, 44, 91),
(41, 44, 91),
(31, 44, 91),
(21, 44, 91),
(11, 44, 91),
(1, 44, 91),
(91, 45, 97),
(81, 45, 97),
(71, 45, 97),
(61, 45, 97),
(51, 45, 97),
(41, 45, 97),
(31, 45, 97),
(21, 45, 97),
(11, 45, 97),
(1, 45, 97),
(100, 45, 51),
(90, 45, 51),
(80, 45, 51),
(70, 45, 51),
(60, 45, 51),
(50, 45, 51),
(40, 45, 51),
(30, 45, 51),
(20, 45, 51),
(10, 45, 51),
(99, 45, 50),
(98, 45, 50),
(97, 45, 50),
(96, 45, 50),
(95, 45, 50),
(94, 45, 50),
(93, 45, 50),
(92, 45, 50),
(99, 46, 56),
(98, 46, 56),
(97, 46, 56),
(96, 46, 56),
(95, 46, 56),
(94, 46, 56),
(93, 46, 56),
(92, 46, 56),
(91, 46, 56),
(82, 46, 57),
(81, 46, 57),
(72, 46, 57),
(71, 46, 57),
(62, 46, 57),
(61, 46, 57),
(52, 46, 57),
(51, 46, 57),
(42, 46, 57),
(41, 46, 57),
(32, 46, 57),
(31, 46, 57),
(22, 46, 57),
(21, 46, 57),
(12, 46, 57),
(11, 46, 57),
(80, 47, 55),
(79, 47, 55),
(70, 47, 55),
(69, 47, 55),
(60, 47, 55),
(59, 47, 55),
(50, 47, 55),
(49, 47, 55),
(40, 47, 55),
(39, 47, 55),
(30, 47, 55),
(29, 47, 55),
(20, 47, 55),
(19, 47, 55),
(81, 47, 54),
(71, 47, 54),
(61, 47, 54),
(51, 47, 54),
(41, 47, 54),
(31, 47, 54),
(21, 47, 54),
(11, 47, 54),
(100, 67, 96),
(90, 67, 96),
(80, 67, 96),
(70, 67, 96),
(60, 67, 96),
(50, 67, 96),
(40, 67, 96),
(30, 67, 96),
(20, 67, 96),
(100, 67, 95),
(99, 67, 95),
(98, 67, 95),
(97, 67, 95),
(96, 67, 95),
(95, 67, 95),
(94, 67, 95),
(93, 67, 95),
(92, 67, 95),
(91, 67, 95),
(81, 67, 94),
(71, 67, 94),
(61, 67, 94),
(51, 67, 94),
(41, 67, 94),
(31, 67, 94),
(21, 67, 94),
(11, 67, 94),
(1, 67, 94),
(100, 48, 63),
(99, 48, 63),
(98, 48, 63),
(97, 48, 63),
(96, 48, 63),
(95, 48, 63),
(94, 48, 63),
(93, 48, 63),
(92, 48, 63),
(91, 48, 63),
(90, 48, 63),
(89, 48, 63),
(88, 48, 63),
(87, 48, 63),
(86, 48, 63),
(85, 48, 63),
(84, 48, 63),
(83, 48, 63),
(82, 48, 63),
(81, 48, 63),
(66, 48, 60),
(65, 48, 60),
(64, 48, 60),
(63, 48, 60),
(62, 48, 60),
(59, 48, 60),
(58, 48, 60),
(57, 48, 60),
(56, 48, 60),
(55, 48, 60),
(54, 48, 60),
(53, 48, 60),
(52, 48, 60),
(49, 48, 60),
(48, 48, 60),
(47, 48, 60),
(46, 48, 60),
(45, 48, 60),
(44, 48, 60),
(43, 48, 60),
(42, 48, 60),
(39, 48, 60),
(38, 48, 60),
(37, 48, 60),
(36, 48, 60),
(35, 48, 60),
(34, 48, 60),
(33, 48, 60),
(32, 48, 60),
(29, 48, 60),
(28, 48, 60),
(27, 48, 60),
(26, 48, 60),
(25, 48, 60),
(24, 48, 60),
(23, 48, 60),
(19, 48, 60),
(18, 48, 60),
(17, 48, 60),
(16, 48, 60),
(15, 48, 60),
(14, 48, 60),
(13, 48, 60),
(99, 49, 93),
(98, 49, 93),
(97, 49, 93),
(96, 49, 93),
(95, 49, 93),
(94, 49, 93),
(93, 49, 93),
(92, 49, 93),
(91, 49, 93),
(90, 49, 93),
(81, 49, 93),
(80, 49, 93),
(71, 49, 93),
(70, 49, 93),
(61, 49, 93),
(60, 49, 93),
(51, 49, 93),
(50, 49, 93),
(41, 49, 93),
(40, 49, 93),
(31, 49, 93),
(30, 49, 93),
(21, 49, 93),
(20, 49, 93),
(11, 49, 93),
(10, 49, 93),
(9, 49, 93),
(8, 49, 93),
(7, 49, 93),
(6, 49, 93),
(5, 49, 93),
(4, 49, 93),
(3, 49, 93),
(2, 49, 93),
(1, 49, 93),
(0, 49, 93),
(56, 50, 61),
(55, 50, 61),
(53, 50, 61),
(52, 50, 61),
(46, 50, 61),
(45, 50, 61),
(43, 50, 61),
(42, 50, 61),
(36, 50, 61),
(35, 50, 61),
(33, 50, 61),
(32, 50, 61),
(26, 50, 61),
(25, 50, 61),
(23, 50, 61),
(22, 50, 61),
(54, 50, 61),
(44, 50, 61),
(34, 50, 61),
(24, 50, 61),
(27, 50, 61),
(37, 50, 61),
(47, 50, 61),
(57, 50, 61),
(58, 50, 61),
(48, 50, 61),
(38, 50, 61),
(28, 50, 61),
(12, 50, 61),
(13, 50, 61),
(14, 50, 61),
(15, 50, 61),
(16, 50, 61),
(17, 50, 61),
(18, 50, 61),
(98, 50, 62),
(97, 50, 62),
(96, 50, 62),
(95, 50, 62),
(94, 50, 62),
(93, 50, 62),
(92, 50, 62),
(91, 50, 62),
(99, 50, 62),
(100, 50, 62),
(100, 51, 64),
(99, 51, 64),
(98, 51, 64),
(97, 51, 64),
(96, 51, 64),
(95, 51, 64),
(90, 51, 64),
(89, 51, 64),
(80, 51, 64),
(70, 51, 64),
(60, 51, 64),
(100, 61, 132),
(99, 61, 132),
(98, 61, 132),
(90, 61, 132),
(89, 61, 132),
(80, 61, 132),
(70, 61, 132),
(91, 52, 102),
(81, 52, 102),
(71, 52, 102),
(61, 52, 102),
(51, 52, 102),
(41, 52, 102),
(100, 52, 101),
(90, 52, 101),
(80, 52, 101),
(70, 52, 101),
(60, 52, 101),
(50, 52, 101),
(40, 52, 101),
(30, 52, 101),
(43, 52, 73),
(42, 52, 73),
(33, 52, 73),
(32, 52, 73),
(30, 52, 73),
(23, 52, 73),
(22, 52, 73),
(20, 52, 73),
(47, 52, 72),
(46, 52, 72),
(45, 52, 72),
(44, 52, 72),
(37, 52, 72),
(36, 52, 72),
(35, 52, 72),
(34, 52, 72),
(27, 52, 72),
(26, 52, 72),
(25, 52, 72),
(24, 52, 72),
(15, 52, 72),
(5, 52, 72),
(79, 52, 69),
(78, 52, 69),
(77, 52, 69),
(76, 52, 69),
(75, 52, 69),
(74, 52, 69),
(69, 52, 69),
(68, 52, 69),
(67, 52, 69),
(66, 52, 69),
(65, 52, 69),
(64, 52, 69),
(26, 53, 71),
(25, 53, 71),
(24, 53, 71),
(23, 53, 71),
(22, 53, 71),
(21, 53, 71),
(16, 53, 71),
(15, 53, 71),
(14, 53, 71),
(13, 53, 71),
(12, 53, 71),
(11, 53, 71),
(6, 53, 71),
(5, 53, 71),
(4, 53, 71),
(3, 53, 71),
(2, 53, 71),
(1, 53, 71),
(0, 53, 71),
(59, 54, 82),
(58, 54, 82),
(49, 54, 82),
(48, 54, 82),
(39, 54, 82),
(38, 54, 82),
(29, 54, 82),
(28, 54, 82),
(71, 54, 81),
(61, 54, 81),
(51, 54, 81),
(41, 54, 81),
(31, 54, 81),
(21, 54, 81),
(90, 55, 77),
(80, 55, 77),
(70, 55, 77),
(60, 55, 77),
(50, 55, 77),
(40, 55, 77),
(30, 55, 77),
(20, 55, 77),
(97, 55, 75),
(96, 55, 75),
(95, 55, 75),
(94, 55, 75),
(93, 55, 75),
(87, 55, 75),
(86, 55, 75),
(85, 55, 75),
(84, 55, 75),
(83, 55, 75),
(77, 55, 75),
(76, 55, 75),
(75, 55, 75),
(74, 55, 75),
(73, 55, 75),
(67, 55, 75),
(66, 55, 75),
(65, 55, 75),
(64, 55, 75),
(63, 55, 75),
(57, 55, 75),
(56, 55, 75),
(55, 55, 75),
(54, 55, 75),
(53, 55, 75),
(47, 55, 75),
(46, 55, 75),
(45, 55, 75),
(44, 55, 75),
(43, 55, 75),
(37, 55, 75),
(36, 55, 75),
(35, 55, 75),
(34, 55, 75),
(33, 55, 75),
(27, 55, 75),
(26, 55, 75),
(25, 55, 75),
(24, 55, 75),
(23, 55, 75),
(83, 56, 80),
(82, 56, 80),
(81, 56, 80),
(73, 56, 80),
(72, 56, 80),
(71, 56, 80),
(63, 56, 80),
(62, 56, 80),
(61, 56, 80),
(53, 56, 80),
(52, 56, 80),
(51, 56, 80),
(43, 56, 80),
(42, 56, 80),
(41, 56, 80),
(33, 56, 80),
(32, 56, 80),
(31, 56, 80),
(23, 56, 80),
(22, 56, 80),
(21, 56, 80),
(13, 56, 80),
(12, 56, 80),
(11, 56, 80),
(100, 56, 79),
(90, 56, 79),
(80, 56, 79),
(70, 56, 79),
(60, 56, 79),
(50, 56, 79),
(40, 56, 79),
(30, 56, 79),
(20, 56, 79),
(83, 57, 85),
(82, 57, 85),
(74, 57, 85),
(73, 57, 85),
(72, 57, 85),
(64, 57, 85),
(63, 57, 85),
(62, 57, 85),
(54, 57, 85),
(53, 57, 85),
(52, 57, 85),
(51, 57, 85),
(44, 57, 85),
(43, 57, 85),
(42, 57, 85),
(41, 57, 85),
(34, 57, 85),
(33, 57, 85),
(32, 57, 85),
(31, 57, 85),
(24, 57, 85),
(23, 57, 85),
(22, 57, 85),
(14, 57, 85),
(13, 57, 85),
(12, 57, 85),
(100, 57, 84),
(99, 57, 84),
(98, 57, 84),
(97, 57, 84),
(96, 57, 84),
(95, 57, 84),
(94, 57, 84),
(93, 57, 84),
(92, 57, 84),
(91, 57, 84),
(90, 57, 84),
(89, 57, 84),
(88, 57, 84),
(87, 57, 84),
(86, 57, 84),
(85, 57, 84),
(84, 57, 84),
(83, 57, 84),
(82, 57, 84),
(81, 57, 84),
(100, 58, 87),
(99, 58, 87),
(98, 58, 87),
(97, 58, 87),
(96, 58, 87),
(95, 58, 87),
(94, 58, 87),
(93, 58, 87),
(92, 58, 87),
(91, 58, 87),
(83, 58, 87),
(82, 58, 87),
(81, 58, 87),
(72, 58, 87),
(71, 58, 87),
(61, 58, 87),
(85, 58, 86),
(84, 58, 86),
(75, 58, 86),
(74, 58, 86),
(65, 58, 86),
(64, 58, 86),
(55, 58, 86),
(54, 58, 86),
(45, 58, 86),
(44, 58, 86),
(34, 58, 86),
(24, 58, 86),
(14, 58, 86),
(71, 61, 67),
(81, 61, 67),
(92, 61, 67),
(93, 61, 67),
(95, 61, 67),
(96, 61, 67),
(97, 61, 67),
(87, 61, 67),
(86, 61, 67),
(83, 61, 67),
(94, 61, 67),
(84, 61, 67),
(85, 61, 67),
(82, 61, 67),
(72, 61, 67),
(98, 62, 106),
(97, 62, 106),
(96, 62, 106),
(95, 62, 106),
(94, 62, 106),
(93, 62, 106),
(92, 62, 106),
(91, 62, 106),
(86, 62, 106),
(85, 62, 106),
(84, 62, 106),
(83, 62, 106),
(82, 62, 106),
(81, 62, 106),
(74, 62, 106),
(73, 62, 106),
(72, 62, 106),
(71, 62, 106),
(63, 62, 106),
(62, 62, 106),
(61, 62, 106),
(51, 62, 106),
(60, 62, 107),
(50, 62, 107),
(49, 62, 107),
(40, 62, 107),
(39, 62, 107),
(38, 62, 107),
(30, 62, 107),
(29, 62, 107),
(28, 62, 107),
(27, 62, 107),
(20, 62, 107),
(19, 62, 107),
(18, 62, 107),
(17, 62, 107),
(16, 62, 107),
(10, 62, 107),
(9, 62, 107),
(8, 62, 107),
(7, 62, 107),
(6, 62, 107),
(5, 62, 107),
(88, 42, 49),
(87, 42, 49),
(86, 42, 49),
(85, 42, 49),
(84, 42, 49),
(83, 42, 49),
(78, 42, 49),
(77, 42, 49),
(76, 42, 49),
(75, 42, 49),
(74, 42, 49),
(73, 42, 49),
(68, 42, 49),
(67, 42, 49),
(66, 42, 49),
(65, 42, 49),
(64, 42, 49),
(63, 42, 49),
(58, 42, 49),
(57, 42, 49),
(56, 42, 49),
(55, 42, 49),
(54, 42, 49),
(53, 42, 49),
(48, 42, 49),
(47, 42, 49),
(46, 42, 49),
(45, 42, 49),
(44, 42, 49),
(43, 42, 49),
(38, 42, 49),
(37, 42, 49),
(36, 42, 49),
(35, 42, 49),
(34, 42, 49),
(33, 42, 49),
(28, 42, 49),
(27, 42, 49),
(26, 42, 49),
(25, 42, 49),
(24, 42, 49),
(23, 42, 49),
(18, 42, 49),
(17, 42, 49),
(16, 42, 49),
(15, 42, 49),
(14, 42, 49),
(13, 42, 49),
(78, 65, 168),
(77, 65, 168),
(76, 65, 168),
(75, 65, 168),
(74, 65, 168),
(68, 65, 168),
(67, 65, 168),
(66, 65, 168),
(65, 65, 168),
(64, 65, 168),
(58, 65, 168),
(57, 65, 168),
(56, 65, 168),
(55, 65, 168),
(54, 65, 168),
(48, 65, 168),
(47, 65, 168),
(46, 65, 168),
(45, 65, 168),
(44, 65, 168),
(38, 65, 168),
(37, 65, 168),
(36, 65, 168),
(35, 65, 168),
(34, 65, 168),
(28, 65, 168),
(27, 65, 168),
(26, 65, 168),
(25, 65, 168),
(24, 65, 168),
(17, 65, 168),
(16, 65, 168),
(15, 65, 168),
(59, 67, 108),
(58, 67, 108),
(57, 67, 108),
(56, 67, 108),
(49, 67, 108),
(48, 67, 108),
(47, 67, 108),
(46, 67, 108),
(45, 67, 108),
(44, 67, 108),
(39, 67, 108),
(38, 67, 108),
(37, 67, 108),
(36, 67, 108),
(35, 67, 108),
(34, 67, 108),
(29, 67, 108),
(28, 67, 108),
(27, 67, 108),
(26, 67, 108),
(25, 67, 108),
(24, 67, 108),
(19, 67, 108),
(18, 67, 108),
(17, 67, 108),
(16, 67, 108),
(15, 67, 108),
(14, 67, 108),
(10, 67, 108),
(9, 67, 108),
(8, 67, 108),
(7, 67, 108),
(6, 67, 108),
(5, 67, 108),
(4, 67, 108),
(901, 65, 170),
(900, 65, 169),
(69, 83, 164),
(68, 83, 164),
(67, 83, 164),
(66, 83, 164),
(65, 83, 164),
(64, 83, 164),
(63, 83, 164),
(62, 83, 164),
(59, 83, 164),
(58, 83, 164),
(57, 83, 164),
(56, 83, 164),
(55, 83, 164),
(54, 83, 164),
(53, 83, 164),
(52, 83, 164),
(49, 83, 164),
(48, 83, 164),
(47, 83, 164),
(46, 83, 164),
(45, 83, 164),
(44, 83, 164),
(43, 83, 164),
(42, 83, 164),
(39, 83, 164),
(38, 83, 164),
(37, 83, 164),
(36, 83, 164),
(35, 83, 164),
(34, 83, 164),
(33, 83, 164),
(32, 83, 164),
(29, 83, 164),
(28, 83, 164),
(27, 83, 164),
(26, 83, 164),
(25, 83, 164),
(24, 83, 164),
(23, 83, 164),
(22, 83, 164),
(88, 66, 156),
(87, 66, 156),
(86, 66, 156),
(85, 66, 156),
(84, 66, 156),
(83, 66, 156),
(78, 66, 156),
(77, 66, 156),
(76, 66, 156),
(75, 66, 156),
(74, 66, 156),
(73, 66, 156),
(68, 66, 156),
(67, 66, 156),
(66, 66, 156),
(65, 66, 156),
(64, 66, 156),
(63, 66, 156),
(58, 66, 156),
(57, 66, 156),
(56, 66, 156),
(55, 66, 156),
(54, 66, 156),
(53, 66, 156),
(48, 66, 156),
(47, 66, 156),
(46, 66, 156),
(45, 66, 156),
(44, 66, 156),
(43, 66, 156),
(38, 66, 156),
(37, 66, 156),
(36, 66, 156),
(35, 66, 156),
(34, 66, 156),
(33, 66, 156),
(28, 66, 156),
(27, 66, 156),
(26, 66, 156),
(25, 66, 156),
(24, 66, 156),
(23, 66, 156),
(901, 66, 173),
(901, 66, 174),
(901, 66, 175),
(78, 65, 110),
(77, 65, 110),
(76, 65, 110),
(75, 65, 110),
(74, 65, 110),
(68, 65, 110),
(67, 65, 110),
(66, 65, 110),
(65, 65, 110),
(64, 65, 110),
(58, 65, 110),
(57, 65, 110),
(56, 65, 110),
(55, 65, 110),
(54, 65, 110),
(48, 65, 110),
(47, 65, 110),
(46, 65, 110),
(45, 65, 110),
(44, 65, 110),
(38, 65, 110),
(37, 65, 110),
(36, 65, 110),
(35, 65, 110),
(34, 65, 110),
(28, 65, 110),
(27, 65, 110),
(26, 65, 110),
(25, 65, 110),
(24, 65, 110),
(17, 65, 110),
(16, 65, 110),
(15, 65, 110),
(100, 52, 100),
(90, 52, 100),
(80, 52, 100),
(70, 52, 100),
(60, 52, 100),
(50, 52, 100),
(40, 52, 100),
(30, 52, 100),
(100, 52, 176),
(90, 52, 176),
(80, 52, 176),
(70, 52, 176),
(60, 52, 176),
(50, 52, 176),
(40, 52, 176),
(30, 52, 176),
(91, 52, 99),
(81, 52, 99),
(71, 52, 99),
(61, 52, 99),
(51, 52, 99),
(41, 52, 99),
(91, 52, 177),
(81, 52, 177),
(71, 52, 177),
(61, 52, 177),
(51, 52, 177),
(41, 52, 177),
(900, 83, 154),
(88, 66, 171),
(87, 66, 171),
(86, 66, 171),
(85, 66, 171),
(84, 66, 171),
(83, 66, 171),
(78, 66, 171),
(77, 66, 171),
(76, 66, 171),
(75, 66, 171),
(74, 66, 171),
(73, 66, 171),
(68, 66, 171),
(67, 66, 171),
(66, 66, 171),
(65, 66, 171),
(64, 66, 171),
(63, 66, 171),
(58, 66, 171),
(57, 66, 171),
(56, 66, 171),
(55, 66, 171),
(54, 66, 171),
(53, 66, 171),
(48, 66, 171),
(47, 66, 171),
(46, 66, 171),
(45, 66, 171),
(44, 66, 171),
(43, 66, 171),
(38, 66, 171),
(37, 66, 171),
(36, 66, 171),
(35, 66, 171),
(34, 66, 171),
(33, 66, 171),
(28, 66, 171),
(27, 66, 171),
(26, 66, 171),
(25, 66, 171),
(24, 66, 171),
(23, 66, 171),
(18, 66, 171),
(17, 66, 171),
(16, 66, 171),
(15, 66, 171),
(14, 66, 171),
(13, 66, 171),
(900, 66, 172),
(900, 66, 178),
(99, 86, 179),
(81, 59, 114),
(71, 59, 114),
(61, 59, 114),
(51, 59, 114),
(41, 59, 114),
(31, 59, 114),
(21, 59, 114),
(11, 59, 114),
(1, 59, 114),
(0, 59, 114);

CREATE TABLE IF NOT EXISTS `grids_actions` (
  `grid_action_id` bigint(20) unsigned NOT NULL auto_increment,
  `scene_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY  (`grid_action_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=180 ;

INSERT INTO `grids_actions` (`grid_action_id`, `scene_id`, `action_id`) VALUES
(1, 22, 1),
(2, 23, 2),
(3, 23, 3),
(4, 24, 4),
(5, 24, 5),
(6, 24, 6),
(7, 24, 7),
(8, 24, 8),
(9, 22, 9),
(10, 22, 10),
(11, 23, 11),
(12, 23, 12),
(13, 25, 13),
(15, 26, 15),
(16, 23, 16),
(24, 26, 24),
(43, 25, 44),
(49, 42, 50),
(50, 45, 53),
(51, 45, 54),
(52, 45, 55),
(53, 45, 56),
(54, 47, 58),
(55, 47, 59),
(56, 46, 60),
(57, 46, 61),
(58, 46, 62),
(59, 48, 63),
(60, 48, 64),
(61, 50, 65),
(62, 50, 66),
(63, 48, 67),
(64, 51, 69),
(65, 51, 70),
(66, 51, 71),
(67, 61, 73),
(68, 61, 74),
(69, 52, 75),
(70, 53, 76),
(71, 53, 77),
(72, 52, 78),
(73, 52, 79),
(74, 52, 80),
(75, 55, 81),
(76, 55, 82),
(77, 55, 83),
(78, 56, 84),
(79, 56, 85),
(80, 56, 86),
(81, 54, 87),
(82, 54, 88),
(83, 54, 89),
(84, 57, 90),
(85, 57, 91),
(86, 58, 92),
(87, 58, 93),
(88, 59, 95),
(89, 60, 96),
(90, 60, 97),
(91, 44, 98),
(92, 44, 99),
(93, 49, 100),
(94, 67, 102),
(95, 67, 103),
(96, 67, 104),
(97, 45, 105),
(98, 44, 106),
(99, 52, 107),
(100, 52, 108),
(101, 52, 109),
(102, 52, 110),
(103, 68, 111),
(104, 68, 112),
(105, 62, 113),
(106, 62, 114),
(107, 62, 115),
(108, 67, 116),
(109, 66, 117),
(110, 65, 118),
(111, 65, 119),
(112, 68, 122),
(113, 66, 120),
(114, 59, 121),
(115, 73, 122),
(116, 73, 123),
(117, 74, 124),
(118, 74, 125),
(119, 74, 126),
(120, 73, 127),
(121, 60, 128),
(122, 60, 129),
(123, 59, 130),
(124, 62, 131),
(125, 62, 132),
(126, 62, 133),
(127, 62, 134),
(128, 62, 135),
(129, 66, 136),
(130, 66, 137),
(131, 61, 138),
(132, 61, 139),
(133, 46, 140),
(134, 47, 141),
(135, 49, 142),
(136, 74, 143),
(137, 81, 145),
(138, 81, 146),
(139, 81, 147),
(140, 81, 148),
(141, 80, 149),
(142, 80, 150),
(143, 80, 151),
(144, 78, 152),
(145, 78, 153),
(146, 78, 154),
(147, 78, 155),
(148, 82, 156),
(149, 82, 157),
(150, 82, 158),
(151, 83, 159),
(152, 73, 160),
(153, 73, 161),
(154, 83, 162),
(155, 84, 163),
(156, 66, 164),
(157, 83, 165),
(158, 66, 166),
(159, 42, 197),
(160, 42, 198),
(161, 42, 192),
(162, 42, 193),
(163, 42, 194),
(164, 83, 195),
(165, 83, 196),
(166, 83, 197),
(167, 83, 198),
(168, 65, 199),
(169, 65, 200),
(170, 65, 201),
(171, 83, 202),
(172, 66, 203),
(173, 66, 204),
(174, 66, 205),
(175, 66, 206),
(176, 52, 207),
(177, 52, 208),
(178, 66, 209),
(179, 86, 210);

CREATE TABLE IF NOT EXISTS `grids_items` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `itemdef_id` bigint(20) unsigned NOT NULL,
  `scene_id` bigint(20) unsigned NOT NULL,
  `cell_id` bigint(20) unsigned NOT NULL,
  `title` varchar(255) character set latin1 NOT NULL,
  `slug` varchar(255) character set latin1 NOT NULL,
  PRIMARY KEY  (`id`),
  KEY `item_id` (`itemdef_id`),
  KEY `scene_id` (`scene_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

INSERT INTO `grids_items` (`id`, `itemdef_id`, `scene_id`, `cell_id`, `title`, `slug`) VALUES
(4, 2, 49, 44, 'mybucket', 'mybucket'),
(5, 7, 86, 65, 'bcc', 'bcc');

CREATE TABLE IF NOT EXISTS `grids_items_actions` (
  `griditem_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  KEY `griditemid` (`griditem_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `grids_items_actions` (`griditem_id`, `action_id`) VALUES
(0, 185),
(4, 186),
(6, 187),
(6, 188),
(4, 189),
(4, 190),
(7, 191),
(8, 196);

CREATE TABLE IF NOT EXISTS `images` (
  `id` bigint(20) NOT NULL auto_increment,
  `story_id` bigint(20) NOT NULL,
  `type_id` int(11) unsigned NOT NULL,
  `filename` varchar(255) character set latin1 NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=95 ;

INSERT INTO `images` (`id`, `story_id`, `type_id`, `filename`) VALUES
(14, 3, 1, 'DSC_0528.JPG'),
(16, 3, 1, 'DSC_0557.JPG'),
(17, 3, 1, 'DSC_0527.JPG'),
(18, 3, 1, 'DSC_0551.JPG'),
(19, 3, 1, 'DSC_0541.JPG'),
(20, 3, 1, 'DSC_0552.JPG'),
(21, 3, 1, 'DSC_0553.JPG'),
(22, 3, 1, 'DSC_0554.JPG'),
(23, 3, 1, 'DSC_0559.JPG'),
(24, 3, 1, 'DSC_0560.JPG'),
(25, 3, 1, 'DSC_0561.JPG'),
(26, 3, 1, 'DSC_0565.JPG'),
(27, 3, 1, 'DSC_0574.JPG'),
(28, 3, 1, 'DSC_0578.JPG'),
(29, 3, 1, 'DSC_0586.JPG'),
(30, 3, 1, 'DSC_0583.JPG'),
(31, 3, 1, 'DSC_0604.JPG'),
(32, 3, 1, 'DSC_0605.JPG'),
(33, 3, 1, 'DSC_0608.JPG'),
(34, 3, 1, 'DSC_0612.JPG'),
(35, 3, 1, 'DSC_0614.JPG'),
(36, 3, 1, 'DSC_0615.JPG'),
(37, 3, 1, 'DSC_0616.JPG'),
(38, 3, 1, 'DSC_0621.JPG'),
(39, 3, 1, 'DSC_0249.JPG'),
(40, 3, 1, 'DSC_0244b.jpg'),
(42, 3, 2, 'bucket.png'),
(43, 3, 1, 'blacksquare.jpg'),
(44, 4, 1, 'DSC_0168.JPG'),
(45, 3, 1, 'DSC_0168.JPG'),
(46, 3, 1, 'DSC_0170.JPG'),
(47, 3, 1, 'DSC_0171.JPG'),
(48, 3, 1, 'DSC_0207.JPG'),
(49, 3, 1, 'DSC_0195.JPG'),
(50, 3, 1, 'DSC_0203.JPG'),
(51, 3, 1, 'DSC_0233.JPG'),
(55, 14, 1, 'IMG_20101007_192002-1.jpg'),
(56, 14, 2, 'IMG_20101007_192002-1-1.jpg'),
(93, 3, 2, 'bucket_full.png'),
(94, 8, 1, '01_with_goatee.jpg');

CREATE TABLE IF NOT EXISTS `image_types` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `title` varchar(255) character set latin1 NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

INSERT INTO `image_types` (`id`, `title`) VALUES
(1, 'scene'),
(2, 'item');

CREATE TABLE IF NOT EXISTS `itemdefs` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `title` varchar(255) NOT NULL,
  `story_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

INSERT INTO `itemdefs` (`id`, `title`, `story_id`) VALUES
(2, 'bucket', 3),
(6, 'yuyyuyuyuyetu', 14),
(7, 'bvbvc', 8);

CREATE TABLE IF NOT EXISTS `items_defs_actions` (
  `itemdef_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  KEY `itemdefid` (`itemdef_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `items_defs_actions` (`itemdef_id`, `action_id`) VALUES
(2, 182),
(2, 184);

CREATE TABLE IF NOT EXISTS `items_states` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `itemdef_id` bigint(20) unsigned NOT NULL,
  `image_id` bigint(20) unsigned NOT NULL,
  `value` varchar(255) character set latin1 NOT NULL,
  `isdefaultstate` tinyint(4) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=13 ;

INSERT INTO `items_states` (`id`, `itemdef_id`, `image_id`, `value`, `isdefaultstate`) VALUES
(1, 1, 41, 'on_ground', 0),
(2, 1, 0, 'taken', 0),
(3, 2, 42, 'empty', 1),
(5, 4, 0, 'on', 0),
(6, 4, 0, 'off', 0),
(7, 0, 0, '', 0),
(8, 0, 0, 'gj', 0),
(9, 0, 0, 'bvvj', 1),
(10, 6, 56, 'bvvj', 1),
(11, 2, 93, 'full', 0),
(12, 7, 0, 'ghsfdgfdgfd', 0);

CREATE TABLE IF NOT EXISTS `items_states_actions` (
  `itemstate_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  KEY `itemstateid` (`itemstate_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `items_states_actions` (`itemstate_id`, `action_id`) VALUES
(5, 174),
(3, 175),
(5, 176),
(3, 177),
(3, 183);

CREATE TABLE IF NOT EXISTS `locations` (
  `story_id` bigint(20) unsigned NOT NULL,
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `title` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=48 ;

INSERT INTO `locations` (`story_id`, `id`, `title`) VALUES
(3, 30, 'Stairs'),
(3, 31, 'Path1'),
(3, 33, 'Building1'),
(3, 34, 'Path2'),
(3, 35, 'Building2'),
(3, 36, 'Path3'),
(3, 37, 'Poison Ivy Field'),
(3, 40, 'Well'),
(3, 41, 'Poison Ivy Field2'),
(3, 42, 'Death'),
(3, 43, 'River'),
(0, 44, 'aasdf'),
(0, 45, 'blah'),
(0, 46, 'blah');

CREATE TABLE IF NOT EXISTS `locations_actions` (
  `location_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  KEY `locationid` (`location_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `locations_actions` (`location_id`, `action_id`) VALUES
(25, 39),
(31, 57),
(33, 68),
(34, 72),
(36, 94),
(31, 101),
(41, 121),
(31, 123),
(43, 122),
(43, 144),
(30, 193);

CREATE TABLE IF NOT EXISTS `modules` (
  `id` bigint(20) NOT NULL auto_increment,
  `dir` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

INSERT INTO `modules` (`id`, `dir`) VALUES
(1, 'plugins\\column'),
(2, 'plugins\\debug'),
(3, 'plugins\\google'),
(4, 'plugins\\helloworld'),
(5, 'plugins\\inventory');

CREATE TABLE IF NOT EXISTS `plugins` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `label` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `class` varchar(255) NOT NULL,
  `events` text NOT NULL,
  `status` char(1) NOT NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `class` (`class`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

INSERT INTO `plugins` (`id`, `label`, `description`, `class`, `events`, `status`) VALUES
(1, 'columns', 'This is the columns plugin', 'plugins_column', 'display_column_left,display_column_right', '0'),
(2, 'Debug', 'Debug Plugin for PCP. Add "?debug" on the url to see debug information', 'plugins_debug', 'display_post_scene,error', '1'),
(3, 'Google integration', 'This is the Google Integration plugin', 'plugins_google', 'display_column_left,display_column_right,display_footer', '0'),
(4, 'helloworld', 'This is the helloworld demonstration plugin', 'plugins_helloworld', 'post_start_story,display_pre_scene,display_post_scene', '0'),
(5, 'Inventory', 'Basic inventory plugin for PCP', 'plugins_inventory', 'post_start_story,css,admin_js,js,display_post_scene,display_post_grid_select,INVENTORY_DISPLAY,INVENTORY_SET_SELECTED_ITEM,INVENTORY_DROP_SELECTED_ITEM', '1');

CREATE TABLE IF NOT EXISTS `scenes` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `story_id` bigint(20) unsigned NOT NULL,
  `location_id` bigint(20) unsigned NOT NULL,
  `title` varchar(255) default NULL,
  `description` text,
  `image_id` bigint(20) default NULL,
  `value` varchar(255) default NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `scene_value` (`value`,`location_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=87 ;

INSERT INTO `scenes` (`id`, `story_id`, `location_id`, `title`, `description`, `image_id`, `value`) VALUES
(42, 3, 30, 'Stairs', 'You see some old stairs. Dare you go down them?', 14, ''),
(44, 3, 31, 'Bottom of Stairs', 'You are on a wooded pathway covered in a thick layer of pine needles. These are the stairs you came down. ', 17, 'west'),
(45, 3, 31, 'Bottom of Stairs', 'You are on a wooded pathway covered in a thick layer of pine needles. There is a river here with old equipment. ', 16, 'east'),
(46, 3, 31, 'Bottom of Stairs', 'You are on a wooded pathway covered in a thick layer of pine needles. There is ruined equipment by the river. ', 18, 'south'),
(47, 3, 31, 'Bottom of Stairs', 'You are on a wooded pathway covered in a thick layer of pine needles. You can see the river through the trees. ', 19, 'south_east'),
(48, 3, 33, 'Building1', 'This appears to the the ruins of an old pumping station.', 20, 'south'),
(49, 3, 33, 'Building1', 'Nothing interesting inside.', 21, 'detail'),
(50, 3, 33, 'Building1', 'This path leads back to the bottom of the stairs. ', 22, 'north'),
(51, 3, 34, 'Path2', 'You are on a wooded pathway covered in thick pine needles. There is a large piece of old metal equipment rusting beside the river.', 23, 'east'),
(52, 3, 35, 'Building2', 'There is a large piece of old metal equipment rusting beside the river.', 24, ''),
(53, 3, 35, 'Building2', 'Thick stagnant water lies below the rusting equipment. It is covered in an oily film. ', 25, 'detail_down'),
(54, 3, 35, 'Building2', 'The river flows lazily behind the rusting equipment. ', 26, 'detail_mid'),
(55, 3, 35, 'Building2', 'There is a rusting box here. ', 27, 'detail_box1_closed'),
(56, 3, 35, 'Building2', 'The rusting box is full of pine needles.', 28, 'detail_box1_open'),
(57, 3, 35, 'Building2', 'The river runs lazily behind the rusting equipment. The rusting electrical box is open.', 29, 'detail_box2_open'),
(58, 3, 35, 'Building2', 'The river runs lazily behind the rusting equipment. There is a partially open rusting electrical box here. ', 30, 'detail_box2_closed'),
(59, 3, 36, 'Path3', 'The path east is blocked by a fallen tree. ', 31, 'east'),
(60, 3, 36, 'Path3', 'You are on a wooden path that follows the river. Ahead is rusting equipment and some stairs. ', 32, 'west'),
(61, 3, 34, 'Path2', 'You are on a wooded pathway covered in thick pine needles. Behind you is a large piece of old metal equipment rusting beside the river.', 33, 'west'),
(62, 3, 37, 'Poison Ivy Field', 'You are in a field full of poison ivy!', 35, ''),
(65, 3, 40, 'Well', 'You are standing above an unmarked well that is protruding from the forest floor. How dangerous! Someone could fall in!', 37, ''),
(66, 3, 40, 'Well', 'You peer into the well and see the bottom is filled with mud and sticks. ', 38, 'detail'),
(67, 3, 31, 'Bottom of Stairs', 'You are on a wooded pathway covered in a thick layer of pine needles. In front of you the woods are overgrown with poison ivy.', 34, 'north'),
(68, 3, 41, 'Poison Ivy Field2', 'You are in a field full of poison ivy! There is a cement pipe protruding from the ground. ', 36, ''),
(73, 3, 36, 'Path3', '', 39, 'north'),
(74, 3, 36, 'Path3', 'The river flows lazily beyond the trees', 45, 'south'),
(77, 3, 42, 'Death', 'You are dead! <br />THE END', 43, ''),
(78, 3, 43, 'River', 'This looks like a good spot to take a dip', 46, 'east'),
(80, 3, 43, 'River', '', 50, 'south'),
(81, 3, 43, 'River', '', 49, 'north'),
(82, 3, 43, 'River', '', 47, 'west'),
(83, 3, 43, 'River', 'the river is low', 48, 'detail'),
(84, 3, 40, 'Well', 'The well is full of water', 51, 'detail_full'),
(85, 0, 46, 'blah', 'asdfdsf', 0, '');

CREATE TABLE IF NOT EXISTS `scenes_actions` (
  `scene_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  KEY `sceneid` (`scene_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `scenes_actions` (`scene_id`, `action_id`) VALUES
(45, 52),
(68, 120),
(71, 121),
(42, 194),
(42, 195);

CREATE TABLE IF NOT EXISTS `sessions` (
  `session_id` varchar(24) NOT NULL,
  `last_active` int(10) unsigned NOT NULL,
  `contents` text NOT NULL,
  PRIMARY KEY  (`session_id`),
  KEY `last_active` (`last_active`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

INSERT INTO `sessions` (`session_id`, `last_active`, `contents`) VALUES
('4dc70215aaf7b1-37686275', 1304887835, 'OEBqfSmJ2D4WjPW8RrDKIbGAsZ6WVD6JNUgt2/O8vDMjODzkKWPJKBMIvtJOtFTbrRLJheCJzKNLzke0eepKbbSGQhXXUBqsY9wMCEtg1W1Xp5WmhvRugMN0nIdEAddx/YBKTfOHoROCk21+PvOQ7LSt9CtW/3PYSFsnhUSdEzkr7J4yzNGY++odRdygHLy5eBBUKCozMia6PWTr6DHTWpXEVyeiYnQK2B270jfgO84tP9tfzG1DIfk7DHNuGqOby6x0pf+9uV5oarzDxF6JV5cZH9GUZ20vfZHdzdT970Rj9FSJp3EGHaU4Q0dYE0N8Sv11TJN1687N4XdWwbme11wsRGogxtqXiTSRkMRkmH3IFn4Vzy4AZ4hi7vEcFS9u4QYohTgVaSiXQs+11CZ8WUh6ejKBP/6VZiw8sm4QAWgHPjNfMsTHqHk8pBfcWfmFGNI37/LGTyE4txGuJthNTxWomcuCrqh8enHN2qR930VGlqfmMlGadOAJVGIHcwYCP/swkPDlbVcnR87Ht+v/i4R6RfF/qIhP2/xp/GsRXED7ihfU3cONXL/ldb63Xlf+pVQgFCMUa6s='),
('4dc7f86f3d69c7-67776886', 1304960790, '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'),
('4dc55c43837df2-85948845', 1304802172, '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'),
('4dc7fe4af27203-50061723', 1304952703, 'pfUH6JesMN3BkZaVjq5i2eNTjCaD/hin+Pbn/NsLqOeAG/epteB2txo4oWi4u8dVW9IMO989gUVjVfrC2PXMar4TgCDPPRtPB/8CufAJQW0rnvPvq4TnOEPOGt9F8RchbElavDiD7QccNwb5v+A5CfqnyNQnSb62STsq5zxfro/TrkStb9ATkQ0f9AxRm4E0DHsAt3C9toiHBX7cmyW01UN3'),
('4dc53ed9726741-59688209', 1304779778, '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'),
('4dc538803e6811-19568586', 1304780153, 'rWG1pwFVNYIwYkV7gu/rufi9hL6Exqxxf60/dPrluVa3+pZAaa0rJYlSVhAB+nJcv7nmPg4kmECYAEZEF9McSxBqBkyAdjbNgOrBfsQUuIqzDNDSPIfAS0aBLbqsaYl5orvjHcUCw3Ea6empwVhUDWiUzNkUSKaxQ2yC+g7allOH5cyNEj5SBUseVIzFe0R+7pJ+Ig7rnGRhPD6rtuoMUUgmvZbp8WwePV7dJRymVhmJKvyRZQRuaQf2t1NTEIJrZyOQP3GSbJ9NzdvFqXbndOHUiciEA1exYNfUaLpFhDWM4Z5qLMHNJQeRK5IM7eE='),
('4dc3d92de6dfa5-91641428', 1304801877, '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'),
('4dc3d932572045-74111094', 1304720853, 'pYcB8IAiyDS3V6AVkY2PurB2UnNaXOCPGBZMe8Lo4180eTUfc+GtZQt/2RXguMxPkyaym2P4DbIqFjZ1aHfbFvbtF4AT2Oltmo8/NvxlW1G7w9n4e5pLDInwEQG1LdxaMkF6ir8GD3utDndZ5jsWScZa78XJcxprHZpdBKYGE2J1D+uwKOIiYZtDQV2LXQHw+6sZpinPvOFBarVJHPgTpaPCfNwmHL0U/lHV/FE1H/9SadDK8mWTHvcwtbZNVLAqETXv4kVDey1mWYeGoQF6zMvtXbUrclNSUpaxWgj9/ZIqPfHIVgvOgYBCODIB8fM='),
('4dc2dfee72fd26-69266079', 1304626499, 'm3S4RZEkH0txcvIFo2hcOaXXEc5U3D9MQuGzQ7M8OjPBiovUVsbX/UDWIaPvNikJId2xpF0J'),
('4dc2dffb0e2898-47344381', 1304626499, 'QdPHEqFUBxlLVRW0ptwYq8VJ5Qowj6hfKxeaGp9dqqem9IRCzyLxlTpn5uEJPO7jVGlkcBlWgLWnhkTMNDOkiGu86wyvvVV9swX71RZdtuxxXmo2rdZl'),
('4dc81f62cac528-66271200', 1304965288, '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'),
('4dc82fcf59cfb8-31507795', 1304965288, 'MVbxmQ67bBcnG9WRw9o2MVcngKzkdpx9utwrIXWC8owu3cOQZEw79U4uuA1z3CyLOg4MGhvKm4ZWlnnU0SLFnawbGzKDgY3ofboBplFpu8SW02sVcW9aXg74McUa4mK1MD2gYIk6fNqS8+7f5NV8N8y2BZN5hfRF0QZjWM460onYxk8SF7b/fBHYNlP6pJZyjuOwb+g53HOOi3IHxXoVRU8abF3v5jxK3RmxWlTbqjJ33o1xTPV/l3DAiSAWpLvEVrtWv9uqP8jng2zK');

CREATE TABLE IF NOT EXISTS `stories` (
  `id` bigint(20) unsigned NOT NULL auto_increment,
  `title` varchar(255) NOT NULL,
  `author` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `first_location_id` bigint(20) unsigned default NULL,
  `image_id` bigint(20) default NULL,
  `status` char(1) NOT NULL,
  `grid_x` smallint(5) unsigned NOT NULL,
  `grid_y` smallint(5) unsigned NOT NULL,
  `theme_name` varchar(255) NOT NULL,
  `created_date` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `creator_user_id` bigint(20) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=9 ;

INSERT INTO `stories` (`id`, `title`, `author`, `description`, `first_location_id`, `image_id`, `status`, `grid_x`, `grid_y`, `theme_name`, `created_date`, `creator_user_id`) VALUES
(3, 'River Path Demo', 'Dan Gaspar', 'Explore the old equipment by the river', 30, 14, 'p', 10, 10, 'default', '2010-10-07 18:04:34', 0),
(7, 'sd', 'asfd', 'asfdasfdasfd', NULL, 0, 'd', 10, 10, '', '2011-04-28 15:21:27', 38);

CREATE TABLE IF NOT EXISTS `stories_actions` (
  `story_id` bigint(20) unsigned NOT NULL,
  `action_id` bigint(20) unsigned NOT NULL,
  KEY `storyid` (`story_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `stories_actions` (`story_id`, `action_id`) VALUES
(2, 36),
(3, 51),
(5, 120),
(3, 192);

CREATE TABLE IF NOT EXISTS `stories_plugins` (
  `storyplugin_id` bigint(20) NOT NULL auto_increment,
  `story_id` bigint(20) NOT NULL,
  `plugin_id` bigint(20) NOT NULL,
  `status` char(1) NOT NULL,
  PRIMARY KEY  (`storyplugin_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=7 ;

INSERT INTO `stories_plugins` (`storyplugin_id`, `story_id`, `plugin_id`, `status`) VALUES
(1, 3, 3, '0'),
(2, 3, 1, '0'),
(3, 3, 2, '1'),
(4, 3, 4, '0'),
(5, 3, 5, '1'),
(6, 8, 4, '1');

CREATE TABLE IF NOT EXISTS `stories_users` (
  `id` bigint(20) NOT NULL auto_increment,
  `story_id` bigint(20) NOT NULL,
  `user_id` bigint(20) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;


CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) unsigned NOT NULL auto_increment,
  `email` varchar(127) NOT NULL,
  `username` varchar(32) NOT NULL default '',
  `password` char(50) NOT NULL,
  `active` tinyint(4) default '1',
  `logins` int(10) unsigned NOT NULL default '0',
  `last_ip_address` varchar(15) default NULL,
  `last_login` datetime default NULL,
  `created` datetime default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=40 ;

INSERT INTO `users` (`id`, `email`, `username`, `password`, `active`, `logins`, `last_ip_address`, `last_login`, `created`) VALUES
(39, '', 'admin', '2e80e939646125be46ab1da1b93e2c8745332648', 1, 0, '127.0.0.1', NULL, '2011-04-25 21:45:06');
